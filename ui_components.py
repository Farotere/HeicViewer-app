from PyQt6.QtWidgets import QToolBar, QMenu
from PyQt6.QtGui import QAction

def create_menu(window):
    menubar = window.menuBar()
    file_menu = menubar.addMenu("&Fichier")
    open_action = QAction("&Ouvrir", window)
    open_action.setShortcut("Ctrl+O")
    open_action.triggered.connect(window.open_file_dialog)
    file_menu.addAction(open_action)
    search_action = QAction("&Rechercher des fichiers HEIC...", window)
    search_action.setShortcut("Ctrl+F")
    search_action.triggered.connect(window.show_heic_finder)
    file_menu.addAction(search_action)
    file_menu.addSeparator()
    next_action = QAction("Image &suivante", window)
    next_action.setShortcut("Right")
    next_action.triggered.connect(window.next_image)
    file_menu.addAction(next_action)
    
    prev_action = QAction("Image &précédente", window)
    prev_action.setShortcut("Left")
    prev_action.triggered.connect(window.prev_image)
    file_menu.addAction(prev_action)
    
    view_all_action = QAction("&Voir toutes les images", window)
    view_all_action.setShortcut("Ctrl+G")
    view_all_action.triggered.connect(window.view_all_images)
    file_menu.addAction(view_all_action)
    file_menu.addSeparator()
    exit_action = QAction("&Quitter", window)
    exit_action.setShortcut("Ctrl+Q")
    exit_action.triggered.connect(window.close)
    file_menu.addAction(exit_action)
    view_menu = menubar.addMenu("&Affichage")
    original_size_action = QAction("Taille &réelle", window)
    original_size_action.setShortcut("Ctrl+1")
    original_size_action.triggered.connect(window.show_original_size)
    view_menu.addAction(original_size_action)
    fit_action = QAction("&Ajuster à la fenêtre", window)
    fit_action.setShortcut("Ctrl+0")
    fit_action.triggered.connect(window.fit_to_window)
    view_menu.addAction(fit_action)
    quality_menu = view_menu.addMenu("&Qualité d'affichage")
    high_quality_action = QAction("&Haute (Par défaut)", window)
    high_quality_action.triggered.connect(lambda: window.set_quality(100))
    quality_menu.addAction(high_quality_action)
    
    medium_quality_action = QAction("&Moyenne", window)
    medium_quality_action.triggered.connect(lambda: window.set_quality(80))
    quality_menu.addAction(medium_quality_action)
    
    low_quality_action = QAction("&Basse", window)
    low_quality_action.triggered.connect(lambda: window.set_quality(60))
    quality_menu.addAction(low_quality_action)
    help_menu = menubar.addMenu("&Aide")
    about_action = QAction("&À propos", window)
    about_action.triggered.connect(window.show_about_dialog)
    help_menu.addAction(about_action)
    associate_action = QAction("&Instructions d'association de fichiers", window)
    associate_action.triggered.connect(window.show_association_dialog)
    help_menu.addAction(associate_action)
    auto_associate_action = QAction("&Associer automatiquement les fichiers .heic", window)
    auto_associate_action.triggered.connect(window.create_file_association)
    help_menu.addAction(auto_associate_action)

def create_toolbar(window):
    toolbar = QToolBar("Barre d'outils")
    window.addToolBar(toolbar)
    open_action = QAction("Ouvrir", window)
    open_action.triggered.connect(window.open_file_dialog)
    toolbar.addAction(open_action)
    search_action = QAction("Rechercher", window)
    search_action.triggered.connect(window.show_heic_finder)
    toolbar.addAction(search_action)
    prev_action = QAction("Précédente", window)
    prev_action.triggered.connect(window.prev_image)
    toolbar.addAction(prev_action)
    
    next_action = QAction("Suivante", window)
    next_action.triggered.connect(window.next_image)
    toolbar.addAction(next_action)
    
    view_all_action = QAction("Voir tout", window)
    view_all_action.triggered.connect(window.view_all_images)
    toolbar.addAction(view_all_action)
    
    toolbar.addSeparator()
    zoom_in_action = QAction("Zoom +", window)
    zoom_in_action.triggered.connect(window.zoom_in)
    toolbar.addAction(zoom_in_action)
    zoom_out_action = QAction("Zoom -", window)
    zoom_out_action.triggered.connect(window.zoom_out)
    toolbar.addAction(zoom_out_action)
    fit_action = QAction("Ajuster", window)
    fit_action.triggered.connect(window.fit_to_window)
    toolbar.addAction(fit_action)
    original_action = QAction("Taille réelle", window)
    original_action.triggered.connect(window.show_original_size)
    toolbar.addAction(original_action)
